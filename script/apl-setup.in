#!/bin/sh
# A script which is run for first time users and others
# in order to set up the user's environment.

# Copyright (C) Branko Bratkovic 1999
# This file is free software and is covered by the GNU General
# Public License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
#
# For more details see the GNU General Public License (GPL) in
# the docs directory of the openAPL source distribution.

prefix=@prefix@
wsdir=@wsdir@

@option_4@

# First time user workspace - the one with the copyright notice in it.
if [ ! -d $HOME/apl ] ; then
  cd
  mkdir apl
  cp $wsdir/continue apl
  echo Created directory ~/apl with continue workspace
fi

# User configuration file
if [ -r $HOME/.aplrc ]
then
  if [ ! -w $HOME/.aplrc ]
  then
    echo "Panic, cannot write to your .aplrc file."
    echo "Configuration aborted!"
    exit -1
  fi
else
  cp $wsdir/aplrc $HOME/.aplrc
  echo Created file ~/.aplrc
fi

which_option() {	# Function to determine if programs exist
feature=$1 ; shift
list=""
echo
echo Looking for $feature on host \"`hostname`\"
for value in $*
do
# following kludge is for compatibility with the wicked which of Solaris
  if [ -n "`which $value | grep $value$`" ]
  then
    echo $value ... found.
    list="$list $value"
  else
    echo $value ... not found.
  fi
done
}

select_option() { # 	Function to select run time options
feature=$1 ; var_name=$2
shift      ; shift
# at this point, $* contains the list of allowable values

if [ $# -eq 0 ]
then
  result=""
  return 0
fi

# Try to set default to existing value
default=`cat $HOME/.aplrc | grep "^$var_name=" | cut -d = -f 2`
if [ -z "$default" ]
then
  default="none"
fi

# Nag the user until a valid response is given
n=-1
while [  $n -lt 0 -o $n -gt $# ]
do
  m=1
  echo
  echo Available options for $feature
  for name in $*
  do
    echo "$m  = $name"
    m=`echo $m + 1 | bc`
  done
  echo "Select an option, (default is $default) : " 
  read n
  if [ -z "$n" ]
  then
    n=0
  fi
done

# Convert numeric response into a value from $*
if [ $n -eq 0 ] 
then
  result=$default
else
  shift `echo $n-1 | bc`
  result=$1
fi
}

install_option() {	# Function to install values into ~/.aplrc
var_name=$1	; value=$2

if (  cat $HOME/.aplrc | grep "$var_name=" 2>/dev/null 1>&2 )
then
  cat $HOME/.aplrc | sed -e "s/^\(#\)\($var_name=\)\(.*\)/\2\3/g" \
                         -e "s/^\($var_name=\)\(.*\)/\1$value/g" \
			 > $HOME/.aplrc.tmp
  mv  $HOME/.aplrc.tmp  $HOME/.aplrc
else
  echo $var_name=$value >> $HOME/.aplrc
fi
}

@option_3@

which_option "X11 editor" elvis-tiny pico elvis xedit axe
select_option "X11 editor" x11editor $list

case $result in 
none )
  result=""
;;
elvis )
  echo WARNING
  echo You have selected an editor that may need manual configuration.
  echo Consult the editors file in the docs/install_guide directory.
  echo -n OK?
  read n
;;
xedit | axe )
  result="\"$result -fn \$x11font\""
;;
elvis-tiny | pico | elvis )
  result="\"rxvt4apl -fn \$x11font -e $result\""
;;
esac

install_option x11editor "$result"

