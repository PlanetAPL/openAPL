#!/bin/sh
# A wrapper to set up terminal emulation and start apl11
# User beware: any changes you make to the following,
# could be destroyed when ./configure is re-run.
# Refer to the script directory in the source.

# Copyright (C) Branko Bratkovic 1998, 1999
# This file is free software and is covered by the GNU General
# Public License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
#
# For more details see the GNU General Public License (GPL) in
# the docs directory of the openAPL source distribution.

# Variables that need to be initialised
arglist=""
font_only=''
norun=0
aplexe="apl11"

prefix=@prefix@
sysconfdir=@sysconfdir@
defaultfont=@defaultfont@
consolefont=@consolefontdir@/apl8x16
defaultmap=@defaultmap@ 
consolemap=@keytabledir@/apl2741.map
x11share=@x11share@
x11map=$x11share/apl2741.xmap
x11modeswitch=$x11share/modeswitch.xmap

x11font=apl8x13
x11terminal="rxvt4apl -title openAPL -ls"

@option_1@

# Deal with the command line arguments
# Act on those that we can, transfer the others to $arglist
for arg 
do
   case "$arg" in
   -help | --help | -h )
      echo "Usage: " $0 "[script options] [apl11 options]"
      echo "Script Options:"
      echo "  -help		this message" 
      echo "  -on		turn apl character set on, does not run apl" 
      echo "  -off		return console to default character set"
      echo "  -setup		interactive user option set up"
      echo "  -n		like make -n, display variables and exit"
      echo "apl11 Options:"
      echo "These are passed to apl11 intact, see apl11(1)"
      exit 0
   ;;
   -n | --norun )
      norun=1
   ;;
   -on | --on )
      font_only="on"
   ;;
   -off | --off )
      font_only="off"
   ;;
   -setup | --setup | -s )
      apl-setup
      exit 0
   ;;
   *)
      arglist="$arglist $arg"
   ;;
   esac
done

# Implement site specific customisation
if [ -r $sysconfdir/apl.sh ]
then
   . $sysconfdir/apl.sh
fi

# First time user admin (unless -on or -off were given)
if [ "$font_only" = "" ] && ( [ ! -d $HOME/apl ] || [ ! -r $HOME/.aplrc ] )
then
   apl-setup
fi

# Implement user specific customisation
if [ -r $HOME/.aplrc ]
then
   . $HOME/.aplrc
fi

# look for .inputrc file support for readline
if [ -r $HOME/.inputrc ]
then
  if { grep "openapl" $HOME/.inputrc > /dev/null ;}
  then
    rl_flag="-r"
  else
    rl_flag=""
  fi
fi


# Debug mode
if [ $norun = 1 ]
then
  echo "aplexe		" $aplexe
  echo "font_only	" $font_only
  echo "sysconfdir	" $sysconfdir
  echo "defaultfont	" $defaultfont
  echo "consolefont	" $consolefont
  echo "defaultmap	" $defaultmap
  echo "consolemap	" $consolemap
  echo "editor		" $editor
  echo "x11editor	" $x11editor
  echo "x11font		" $x11font
  echo "x11map		" $x11map
  echo "x11modeswitch	" $x11modeswitch
  echo "x11terminal	" $x11terminal
  echo "arglist		" $arglist
  echo "rl_flag		" $rl_flag
  exit 0
fi

# Make sure that user's workspaces are visible
cd $HOME/apl

@option_2@

#Now do it for X11
if [ "$interface" = "X11" ]
then

   # set the editor
   if [ "$x11editor" != "" ] ; then
      EDITOR="$x11editor"
      export EDITOR
   else
     echo Warning: cannot edit functions until \$x11editor is set.
     echo Use: apl -setup
   fi
   
   # load the key translation table
   if [ "$font_only" != "off" ] ; then
      xmodmap $x11map
      if [ -r $x11modeswitch ] ; then
        xmodmap $x11modeswitch
      fi
   fi
   
   # run the program (unless -on or -off were given)
   if [ "$font_only" = "on" ] ; then
      $x11terminal -fn $x11font &
   else
      $x11terminal -fn $x11font -e $aplexe $arglist $rl_flag & 
   fi
   
fi

