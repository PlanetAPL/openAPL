%% Font header text for APL-2741
%% Author: Adrian Smith, Brook House, Gilling East, York, England
%% Copyright: Adrian Smith, MCMXC
%% This font may be freely copied and distributed on the understanding
%% that it is reproduced unaltered, and includes this copyright notice.
/newfont 10 dict def
newfont begin

/FontType 3 def           % Required elements of font
/FontMatrix [1 1200 div 0 0 1 1200 div 0 0] def
/FontBBox [0 -250 720 950] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
 
Encoding 33 /QUOTEDOT put
Encoding 34 /DOUBLEQUOTE put
Encoding 35 /HASH put
Encoding 36 /DOLLAR put
Encoding 37 /PERCENT put
Encoding 38 /AMPERSAND put
Encoding 39 /QUOTE put
Encoding 40 /LEFTPAREN put
Encoding 41 /RIGHTPAREN put
Encoding 42 /STAR put
Encoding 43 /PLUS put
Encoding 44 /COMMA put
Encoding 45 /BAR put
Encoding 46 /DOT put
Encoding 47 /SLASH put
Encoding 48 /ZERO put
Encoding 49 /ONE put
Encoding 50 /TWO put
Encoding 51 /THREE put
Encoding 52 /FOUR put
Encoding 53 /FIVE put
Encoding 54 /SIX put
Encoding 55 /SEVEN put
Encoding 56 /EIGHT put
Encoding 57 /NINE put
Encoding 58 /COLON put
Encoding 59 /SEMICOLON put
Encoding 60 /LT put
Encoding 61 /EQUAL put
Encoding 62 /GT put
Encoding 63 /QUERY put
Encoding 64 /AT put
Encoding 65 /A put
Encoding 66 /B put
Encoding 67 /C put
Encoding 68 /D put
Encoding 69 /E put
Encoding 70 /F put
Encoding 71 /G put
Encoding 72 /H put
Encoding 73 /I put
Encoding 74 /J put
Encoding 75 /K put
Encoding 76 /L put
Encoding 77 /M put
Encoding 78 /N put
Encoding 79 /O put
Encoding 80 /P put
Encoding 81 /Q put
Encoding 82 /R put
Encoding 83 /S put
Encoding 84 /T put
Encoding 85 /U put
Encoding 86 /V put
Encoding 87 /W put
Encoding 88 /X put
Encoding 89 /Y put
Encoding 90 /Z put
Encoding 91 /LEFTBRACKET put
Encoding 92 /SLOPE put
Encoding 93 /RIGHTBRACKET put
Encoding 94 /AND put
Encoding 95 /UNDERBAR put
Encoding 96 /BACKQUOTE put
Encoding 97 /a put
Encoding 98 /b put
Encoding 99 /c put
Encoding 100 /d put
Encoding 101 /e put
Encoding 102 /f put
Encoding 103 /g put
Encoding 104 /h put
Encoding 105 /i put
Encoding 106 /j put
Encoding 107 /k put
Encoding 108 /l put
Encoding 109 /m put
Encoding 110 /n put
Encoding 111 /o put
Encoding 112 /p put
Encoding 113 /q put
Encoding 114 /r put
Encoding 115 /s put
Encoding 116 /t put
Encoding 117 /u put
Encoding 118 /v put
Encoding 119 /w put
Encoding 120 /x put
Encoding 121 /y put
Encoding 122 /z put
Encoding 123 /LEFTBRACE put
Encoding 124 /SPLITSTILE put
Encoding 125 /RIGHTBRACE put
Encoding 126 /TILDE put
Encoding 128 /RIGHTTACK put
Encoding 129 /LEFTTACK put
Encoding 130 /LEFTSHOE put
Encoding 131 /RIGHTSHOE put
Encoding 132 /IBEAM put
Encoding 133 /RIGHTARROW put
Encoding 134 /NE put
Encoding 135 /ZILDE put
Encoding 136 /PAW put
Encoding 137 /LOG put
Encoding 138 /IOTAUNDERBAR put
Encoding 139 /DOWNARROW put
Encoding 140 /UPARROW put
Encoding 141 /UPSTILE put
Encoding 143 /DOWNSTILE put
Encoding 144 /LEFTARROW put
Encoding 145 /DELTA put
Encoding 146 /MULTIPLY put
Encoding 147 /DELTASTILE put
Encoding 149 /QUAD put
Encoding 150 /DELTILDE put
Encoding 151 /QUOTEQUAD put
Encoding 152 /DOMINO put
Encoding 153 /FIND put
Encoding 154 /DIERESIS put
Encoding 155 /CENT put
Encoding 156 /STERLING put
Encoding 157 /DELSTILE put
Encoding 158 /COMMABAR put
Encoding 159 /FROWN put
Encoding 160 /QUADUP put
Encoding 161 /QUADDOWN put
Encoding 162 /QUADLEFT put
Encoding 163 /QUADRIGHT put
Encoding 164 /QUADSLOPE put
Encoding 165 /QUADJOT put
Encoding 166 /LAMP put
Encoding 167 /SLOPEBAR put
Encoding 168 /DIAMOND put
Encoding 169 /SQUAD put
Encoding 170 /SNOUT put
Encoding 171 /FROG put
Encoding 172 /SOURPUSS put
Encoding 173 /NOTMATCH put
Encoding 174 /GUILLEMOTLEFT put
Encoding 175 /GUILLEMOTRIGHT put
Encoding 179 /LD179 put
Encoding 180 /LD180 put
Encoding 181 /LD181 put
Encoding 182 /LD182 put
Encoding 183 /LD183 put
Encoding 184 /LD184 put
Encoding 185 /LD185 put
Encoding 186 /LD186 put
Encoding 187 /LD187 put
Encoding 188 /LD188 put
Encoding 189 /LD189 put
Encoding 190 /LD190 put
Encoding 191 /LD191 put
Encoding 192 /LD192 put
Encoding 193 /LD193 put
Encoding 194 /LD194 put
Encoding 195 /LD195 put
Encoding 196 /LD196 put
Encoding 197 /LD197 put
Encoding 198 /LD198 put
Encoding 199 /LD199 put
Encoding 200 /LD200 put
Encoding 201 /LD201 put
Encoding 202 /LD202 put
Encoding 203 /LD203 put
Encoding 204 /LD204 put
Encoding 205 /LD205 put
Encoding 206 /LD206 put
Encoding 207 /LD207 put
Encoding 208 /LD208 put
Encoding 209 /LD209 put
Encoding 210 /LD210 put
Encoding 211 /LD211 put
Encoding 212 /LD212 put
Encoding 213 /LD213 put
Encoding 214 /LD214 put
Encoding 215 /LD215 put
Encoding 216 /LD216 put
Encoding 217 /LD217 put
Encoding 218 /LD218 put
Encoding 219 /LD219 put
Encoding 220 /LD220 put
Encoding 221 /LD221 put
Encoding 222 /LD222 put
Encoding 223 /LD223 put
Encoding 224 /ALPHA put
Encoding 225 /BETA put
Encoding 226 /IOTA put
Encoding 227 /HOOT put
Encoding 228 /HOLLER put
Encoding 229 /NOR put
Encoding 230 /BASE put
Encoding 231 /ENCODE put
Encoding 232 /CIRCLESTILE put
Encoding 233 /CIRCLEBAR put
Encoding 234 /NAND put
Encoding 235 /SLASHBAR put
Encoding 236 /DEL put
Encoding 237 /CIRCLESLOPE put
Encoding 238 /EPSILON put
Encoding 239 /UPSHOE put
Encoding 240 /MATCH put
Encoding 241 /DELTAUNDERBAR put
Encoding 242 /GE put
Encoding 243 /LE put
Encoding 244 /FORMAT put
Encoding 245 /EXECUTE put
Encoding 246 /DIVIDE put
Encoding 247 /OMEGA put
Encoding 248 /JOT put
Encoding 249 /CIRCLE put
Encoding 250 /OR put
Encoding 251 /RHO put
Encoding 252 /DOWNSHOE put
Encoding 253 /HIGHBAR put
Encoding 254 /STILE put
 
/CharProcs 217 dict def     % for chars
CharProcs begin
/.notdef {} def
 
/QUOTEDOT
 { 
   367 587 moveto
   325 630 60 -45 235 arc
   300 550 300 450 300 410 curveto
   300 250 350 250 350 410 curveto
   350 450 350 550 367 587 curveto
   fill
   325 60 90 0 360 arc fill
 } def
 
/DOUBLEQUOTE
 { 
   225 680 moveto 0 -170 rlineto
   425 680 moveto 0 -170 rlineto
   stroke
 } def
 
/HASH
 { 
   130 20 moveto 330 640 lineto
   340 20 moveto 540 640 lineto
   150 450 moveto 560 450 lineto
   90 230 moveto 500 230 lineto
   stroke
 } def
 
/DOLLAR
 { 
   100 100 moveto
   600 -100 700 325 325 325 curveto
   0 325 50 700 520 560 curveto
   325 -20 moveto 325 680 lineto
   stroke
 } def
 
/PERCENT
 { 
   135 -130 moveto 505 700 lineto stroke
   180 500 80 360 0 arc stroke
   480 100 80 360 0 arc stroke
 } def
 
/AMPERSAND
 { 
   520 20 moveto
   230 480 lineto
   90 750 600 750 460 480 curveto
   430 440 340 360 240 290 curveto
   60 190 100 20 310 20 curveto
   400 20 500 100 550 150 curveto
   stroke
 } def
 
/QUOTE
 { 
   367 587 moveto
   325 630 60 -45 235 arc
   300 550 300 450 300 410 curveto
   300 250 350 250 350 410 curveto
   350 450 350 550 367 587 curveto
   fill
 } def
 
/LEFTPAREN
 { 
   420 -120 moveto
   180 0 180 580 420 700 curveto
   stroke
 } def
 
/RIGHTPAREN
 { 
   230 -120 moveto
   470 0 470 580 230 700 curveto
   stroke
 } def
 
/STAR
 { 
   325 300 moveto 0 210 rlineto
   325 300 moveto -196 70 rlineto
   325 300 moveto 196 70 rlineto
   325 300 moveto -126 -168 rlineto
   325 300 moveto 126 -168 rlineto
   stroke
 } def
 
/PLUS
 { 
   90 300 moveto 560 300 lineto
   325 30 moveto 325 530 lineto
   stroke
 } def
 
/COMMA
 { 
   350 -20 moveto 200 -30 200 120 330 110 curveto
   450 100 440 -150 240 -150 curveto
   235 -100 lineto
   320 -100 350 -60 350 -20 curveto
   fill
 } def
 
/BAR
 { 
   125 300 moveto 400 0 rlineto stroke
 } def
 
/DOT
 { 
   325 60 90 0 360 arc fill
 } def
 
/SLASH
 { 
   150 -100 moveto 500 700 lineto stroke
 } def
 
/ZERO
 { 
   325 630 moveto
   75 630 75 20 325 20 curveto
   575 20 575 630 325 630 curveto
   stroke
 } def
 
/ONE
 { 
   170 20 moveto 390 0 rlineto
   375 20 moveto 375 630 lineto
   350 550 300 500 190 480 curveto
   stroke
 } def
 
/TWO
 { 
   140 20 moveto 380 0 rlineto
   140 20 moveto 460 350 lineto
   500 400 510 440 510 460 curveto
   330 460 180 0 180 arc
   stroke
 } def
 
/THREE
 { 
   300 350 moveto
   450 350 460 370 480 390 curveto
   620 640 240 720 190 510 curveto
   300 350 moveto
   460 350 530 300 530 170 curveto
   530 -40 175 -40 170 170 curveto
   stroke
 } def
 
/FOUR
 { 
   200 630 moveto
   205 550 180 330 150 210 curveto
   570 210 lineto
   430 20 moveto 0 530 rlineto
   stroke
 } def
 
/FIVE
 { 
   322 210 194 -155 135 arc
   490 630 moveto 182 630 lineto 182 350 lineto
   stroke
 } def
 
/SIX
 { 
   500 200 moveto
   320 200 180 0 360 arc
   140 200 moveto 140 420 lineto
   140 670 400 670 460 600 curveto
   stroke
 } def
 
/SEVEN
 { 
   150 532 moveto 150 630 lineto
   515 630 lineto 225 20 lineto stroke
 } def
 
/EIGHT
 { 
   320 340 moveto
   540 340 540 630 320 630 curveto
   100 630 100 340 320 340 curveto
   570 340 570 20 320 20 curveto
    70 20 70 340 320 340 curveto
   stroke
 } def
 
/NINE
 { 
   322 448 182 0 360 arc
   504 448 moveto
   504 250 lineto
   510 -10 250 -10 190 60 curveto
   stroke
 } def
 
/COLON
 { 
   325 60 80 0 360 arc fill
   325 400 80 0 360 arc fill
 } def
 
/SEMICOLON
 { 
   350 -20 moveto 200 -30 200 120 330 110 curveto
   450 100 440 -150 240 -150 curveto
   235 -100 lineto
   320 -100 350 -60 350 -20 curveto
   fill
   310 370 80 0 360 arc
   fill
 } def
 
/LT
 { 
   515 480 moveto 135 300 lineto 515 120 lineto
   stroke
 } def
 
/EQUAL
 { 
   125 400 moveto 400 0 rlineto
   125 200 moveto 400 0 rlineto stroke
 } def
 
/GT
 { 
   135 480 moveto 515 300 lineto 135 120 lineto
   stroke
 } def
 
/QUERY
 { 
   270 60 60 0 360 arc
   fill
   300 640 moveto 300 550 210 600 300 640 curveto
   460 710 580 670 580 570 curveto
   580 440 320 380 310 240 curveto
   stroke
 } def
 
/AT
 { 
   430 470 moveto
   90 670 90 20 420 210 curveto % the bulge of the 'a' bit
   440 510 moveto
   400 390 400 250 420 200 curveto % the tail of the 'a'
   480 120 570 240 580 380 curveto % then round the ....
   580 590 520 680 325 680 curveto % bend we go.
   -40 680 -40 20 325 20 curveto
   400 20 480 50 540 90 curveto
   stroke
 } def
 
/A
 { 
   20 20 moveto 150 0 rlineto
   370 20 moveto 188 0 rlineto
    70 20 moveto 420 680 lineto 40 0 rlineto 470 20 lineto
   175 215 moveto 460 215 lineto
   stroke
 } def
 
/B
 { 
   98 20 moveto 165 660 rlineto
    42 20 moveto 280 0 rlineto
   580 20 600 364 378 364 curveto
   182 364 lineto
   378 364 moveto
   600 364 630 670 476 680 curveto
   154 680 lineto
   stroke
 } def
 
/C
 { 
   610 470 moveto 610 610 lineto 650 680 lineto
   610 610 moveto
   560 660 520 680 466 680 curveto
   130 670 -10 20 306 20 curveto
   400 20 460 60 540 180 curveto
   stroke
 } def
 
/D
 { 
   98 20 moveto 165 660 rlineto
    30 20 moveto 162 0 rlineto
   680 20 710 680 410 680 curveto
   160 680 lineto
   stroke
 } def
 
/E
 { 
   56 20 moveto 480 20 lineto 45 180 rlineto
   125 20 moveto 290 680 lineto
   160 680 moveto 630 680 lineto -45 -180 rlineto
   206 350 moveto 392 350 lineto
   416 446 moveto 368 254 lineto
   stroke
 } def
 
/F
 { 
   70 20 moveto 230 0 rlineto
   125 20 moveto 290 680 lineto
   140 680 moveto 630 680 lineto 592 518 lineto
   206 350 moveto 392 350 lineto
   416 446 moveto 368 254 lineto
   stroke
 } def
 
/G
 { 
   575 510 moveto 590 640 lineto 620 670 lineto
   590 640 moveto
   560 660 490 680 450 680 curveto
   100 680 -60 20 280 20 curveto
   420 20 480 190 504 280 curveto
   440 20 lineto
   410 280 moveto 200 0 rlineto
   stroke
 } def
 
/H
 { 
   50 20 moveto 160 0 rlineto
    330 20 moveto 190 0 rlineto
    120 20 moveto 165 660 rlineto
    420 20 moveto 165 660 rlineto
    210 680 moveto 160 0 rlineto
    490 680 moveto 150 0 rlineto
    210 356 moveto 504 356 lineto
   stroke
 } def
 
/I
 { 
   78 20 moveto 454 20 lineto
    266 20 moveto 426 680 lineto
    238 680 moveto 614 680 lineto
   stroke
 } def
 
/J
 { 
   185 200 moveto 300 180 290 290 180 220 curveto
   100 140 120 20 270 20 curveto
   350 20 435 80 450 180 curveto
   580 680 lineto
   410 680 moveto 300 0 rlineto
   stroke
 } def
 
/K
 { 
   30 20 moveto 170 0 rlineto
    380 20 moveto 180 0 rlineto
    120 20 moveto 165 660 rlineto
    185 270 moveto 320 350 lineto 600 680 lineto
    320 350 moveto 450 20 lineto
    180 680 moveto 160 0 rlineto
    520 680 moveto 120 0 rlineto
   stroke
 } def
 
/L
 { 
   50 20 moveto 500 20 lineto
    155 20 moveto 165 660 rlineto
    500 20 moveto 45 180 rlineto
    190 680 moveto 300 0 rlineto
   stroke
 } def
 
/M
 { 
   20 20 moveto 130 20 lineto
   380 20 moveto 570 20 lineto
    60 20 moveto 165 660 rlineto
   160 680 moveto 250 680 lineto
   290 175 lineto 600 680 lineto 630 680 lineto 470 20 lineto
   630 680 moveto 40 0 rlineto
   stroke
 } def
 
/N
 { 
   40 20 moveto 140 0 rlineto
    90 20 moveto 165 660 rlineto
   180 680 moveto 300 680 lineto 420 20 lineto 165 660 rlineto
   470 680 moveto 170 0 rlineto
   stroke
 } def
 
/O
 { 
   266 20 moveto
   550 20 710 680 426 680 curveto
   110 680 -50 20 266 20 curveto
   stroke
 } def
 
/P
 { 
   80 20 moveto 280 0 rlineto
   170 20 moveto 165 660 rlineto
   250 330 moveto 450 330 lineto
   630 330 720 680 510 680 curveto
   180 680 lineto
   stroke
 } def
 
/Q
 { 
   266 20 moveto
   540 20 700 680 426 680 curveto
   426 680 moveto
   120 680 -40 20 266 20 curveto
   125 100 moveto
   420 520 270 -350 540 20 curveto
   stroke
 } def
 
/R
 { 
   30 20 moveto 200 0 rlineto
   130 20 moveto 165 660 rlineto
   210 350 moveto 360 350 lineto
   600 350 720 680 480 680 curveto 180 680 lineto
   360 350 moveto % down to the right foot.
   450 330 430 170 520 20 curveto 60 0 rlineto
   stroke
 } def
 
/S
 { 
   580 530 moveto 585 640 lineto 620 680 lineto
   585 630 moveto
   560 660 480 680 430 680 curveto % to summit of top half
   200 680 120 380 440 360 curveto % main bit of top half
   610 320 570 20 260 20 curveto % down to the baseline
   200 30 140 50 110 100 curveto % and back up to the serif
   130 240 lineto
   110 100 moveto 60 30 lineto
   stroke
 } def
 
/T
 { 
   120 20 moveto 420 20 lineto
   266 20 moveto 426 680 lineto
   158 446 moveto 216 680 lineto 634 680 lineto 570 446 lineto
   stroke
 } def
 
/U
 { 
   182 680 moveto 182 0 rlineto
   252 680 moveto 140 222 lineto
   84 -10 392 -90 462 160 curveto
   594 680 lineto
   532 680 moveto 112 0 rlineto
   stroke
 } def
 
/V
 { 
   170 680 moveto 180 0 rlineto
   530 680 moveto 140 0 rlineto
   254 680 moveto 275 20 lineto 610 680 lineto
   stroke
 } def
 
/W
 { 
   140 680 moveto 310 680 lineto
   196 680 moveto 80 20 lineto
   330 378 lineto 392 20 lineto 644 680 lineto
   540 680 moveto 680 680 lineto
   stroke
 } def
 
/X
 { 
   30 20 moveto 140 0 rlineto
    330 20 moveto 200 0 rlineto
    80 20 moveto 570 680 lineto
    430 20 moveto 250 680 lineto
    170 680 moveto 170 0 rlineto
    500 680 moveto 130 0 rlineto
   stroke
 } def
 
/Y
 { 
   180 680 moveto 310 680 lineto
   238 680 moveto 336 336 lineto
   120 20 moveto 400 20 lineto
   260 20 moveto 336 336 lineto 560 680 lineto
   470 680 moveto 610 680 lineto
   stroke
 } def
 
/Z
 { 
   210 510 moveto 252 680 lineto
   574 680 lineto 126 20 lineto 518 20 lineto 560 190 lineto
   stroke
 } def
 
/LEFTBRACKET
 { 
   545 -70 moveto -280 0 rlineto 0 770 rlineto 280 0 rlineto
   stroke
 } def
 
/SLOPE
 { 
   150 700 moveto 500 -100 lineto stroke
 } def
 
/RIGHTBRACKET
 { 
   105 -70 moveto 280 0 rlineto 0 770 rlineto -280 0 rlineto
   stroke
 } def
 
/AND
 { 
   125 130 moveto 325 520 lineto 525 130 lineto
   stroke
 } def
 
/UNDERBAR
 { 
   50 -170 moveto 550 0 rlineto stroke
 } def
 
/BACKQUOTE
 { 
   367 587 moveto
   325 630 60 -45 235 arc
   300 550 300 450 300 410 curveto
   300 250 350 250 350 410 curveto
   350 450 350 550 367 587 curveto
   fill
 } def
 
/a
 { 
   210 480 moveto
   950 670 210 20 560 20 curveto
   520 290 moveto
   30 460 -150 -140 460 60 curveto stroke
 } def
 
/b
 { 
   60 20 moveto
   100 20 140 35 160 70 curveto
   320 680 lineto
   200 680 moveto 180 0 rlineto
   160 70 moveto
   600 -190 810 730 260 450 curveto stroke
 } def
 
/c
 { 
   550 380 moveto
   530 460 lineto 580 510 lineto
   530 460 moveto
   130 680 -40 20 325 20 curveto
   380 20 450 50 510 100 curveto stroke
 } def
 
/d
 { 
   560 20 moveto
   500 20 450 60 470 130 curveto
   620 680 lineto
   500 680 moveto 180 0 rlineto
   555 450 moveto 95 730 -80 20 320 20 curveto
   390 20 440 50 470 70 curveto stroke
 } def
 
/e
 { 
   110 270 moveto 550 270 lineto
   590 400 540 510 400 510 curveto
   60 510 -20 20 325 20 curveto
   410 20 470 40 510 70 curveto stroke
 } def
 
/f
 { 
   80 20 moveto 320 0 rlineto
   220 20 moveto 370 530 lineto
   395 640 510 740 640 660 curveto
   270 510 moveto 270 0 rlineto stroke
 } def
 
/g
 { 
   60 -200 moveto
   300 -300 380 -180 440 60 curveto
   550 460 lineto
   570 500 600 520 640 500 curveto
   540 450 moveto 70 700 -90 20 300 20 curveto
   370 20 410 50 440 70 curveto stroke
 } def
 
/h
 { 
   50 20 moveto 130 0 rlineto
   120 20 moveto 320 680 lineto
   210 680 moveto 180 0 rlineto
   240 410 moveto 460 580 630 530 560 320 curveto
   460 20 lineto 380 20 moveto 150 0 rlineto stroke
 } def
 
/i
 { 
   120 20 moveto 340 0 rlineto
   290 20 moveto 420 510 lineto -130 0 rlineto stroke
   445 670 40 0 360 arc fill
 } def
 
/j
 { 
   70 -220 moveto 220 -200 280 -180 330 0 curveto
   470 510 lineto -200 0 rlineto stroke
   495 670 40 0 360 arc fill
 } def
 
/k
 { 
   70 20 moveto 170 0 rlineto
   160 20 moveto 370 680 lineto
   280 680 moveto 130 0 rlineto
   235 250 moveto 545 510 lineto
   460 510 moveto 130 0 rlineto
   360 350 moveto 510 20 lineto
   430 20 moveto 150 0 rlineto stroke
 } def
 
/l
 { 
   140 20 moveto 320 0 rlineto
   280 20 moveto 445 680 lineto
   -90 0 rlineto stroke
 } def
 
/m
 { 
   0 20 moveto 110 0 rlineto
   50 20 moveto 145 420 lineto
   160 480 130 510 75 510 curveto
   145 420 moveto 220 550 340 530 370 420 curveto
   270 20 lineto -30 0 rmoveto 70 0 rlineto
    370 420 moveto 460 590 630 500 600 350 curveto
   510 20 lineto 460 20 moveto 120 0 rlineto stroke
 } def
 
/n
 { 
   50 20 moveto 130 0 rlineto
   120 20 moveto 250 450 lineto
   255 490 200 510 160 510 curveto
   250 450 moveto 380 560 610 540 570 380 curveto
   460 20 lineto 380 20 moveto 150 0 rlineto stroke
 } def
 
/o
 { 
   280 30 moveto
   570 -50 700 430 400 500 curveto
   90 580 -10 100 280 30 curveto
   stroke
 } def
 
/p
 { 
   20 -230 moveto 160 0 rlineto
   50 -230 moveto 230 470 lineto
   235 490 190 510 160 510 curveto
   130 70 moveto
   620 -200 790 710 230 470 curveto stroke
 } def
 
/q
 { 
   250 -230 moveto 200 0 rlineto
   375 -230 moveto 550 460 lineto
   570 500 600 520 640 500 curveto
   540 450 moveto 70 700 -90 20 300 20 curveto
   370 20 410 50 450 70 curveto stroke
 } def
 
/r
 { 
   90 20 moveto 260 0 rlineto
   150 20 moveto 280 470 lineto
   280 500 250 510 210 510 curveto
   255 390 moveto 390 510 490 540 620 490 curveto
   stroke
 } def
 
/s
 { 
   90 20 moveto 120 70 lineto 130 150 lineto
   120 70 moveto 160 30 240 20 325 20 curveto
   530 20 610 270 325 280 curveto
   90 300 170 510 400 510 curveto
   450 510 510 490 570 450 curveto
   610 490 lineto
   570 450 moveto 560 390 lineto
   stroke
 } def
 
/t
 { 
   340 680 moveto 200 160 lineto
   170 -10 370 -50 500 70 curveto
   190 510 moveto 320 0 rlineto
   stroke
 } def
 
/u
 { 
   140 510 moveto 70 0 rlineto
   130 190 lineto
   90 0 400 -60 460 120 curveto
   560 510 lineto -90 0 rlineto
   460 120 moveto
   450 80 480 30 520 20 curveto
   stroke
 } def
 
/v
 { 
   120 510 moveto 160 0 rlineto
   210 510 moveto
   290 20 lineto 560 510 lineto
   480 510 moveto 120 0 rlineto
   stroke
 } def
 
/w
 { 
   60 510 moveto 150 0 rlineto
   110 510 moveto
   160 20 lineto 180 20 lineto
   330 300 lineto 340 20 lineto 360 20 lineto
   610 510 lineto
   520 510 moveto 120 0 rlineto
   stroke
 } def
 
/x
 { 
   130 510 moveto 150 0 rlineto
   180 510 moveto 440 20 lineto
   370 20 moveto 160 0 rlineto
   50 20 moveto 140 0 rlineto
   80 20 moveto 560 510 lineto
   470 510 moveto 130 0 rlineto
   stroke
 } def
 
/y
 { 
   100 -230 moveto 180 0 rlineto
   190 -230 moveto 570 510 lineto
   450 510 moveto 160 0 rlineto
   330 50 moveto 190 510 lineto
   120 510 moveto 140 0 rlineto
   stroke
 } def
 
/z
 { 
   160 400 moveto 190 510 lineto
   540 510 lineto
   580 510 580 490 550 470 curveto
   130 80 lineto
   100 40 100 20 150 20 curveto
   500 20 lineto 530 140 lineto
   stroke
 } def
 
/LEFTBRACE
 { 
   200 300 moveto
   470 310 200 680 460 680 curveto

   200 300 moveto
   470 290 200 -80 460 -80 curveto
   stroke
 } def
 
/SPLITSTILE
 { 
   325 710 moveto 325 370 lineto
   325 -150 moveto 325 230 lineto
   stroke
 } def
 
/RIGHTBRACE
 { 
   450 300 moveto
   180 310 450 680 190 680 curveto

   450 300 moveto
   180 290 450 -80 190 -80 curveto
   stroke
 } def
 
/TILDE
 { 
   90 320 moveto
   150 550 550 150 570 410 curveto
   stroke
 } def
 
/RIGHTTACK
 { 
   125 300 moveto 400 0 rlineto
   0 -150 rmoveto 0 300 rlineto
   stroke
 } def
 
/LEFTTACK
 { 
   125 300 moveto 400 0 rlineto
   125 150 moveto 0 300 rlineto
   stroke
 } def
 
/LEFTSHOE
 { 
   532 448 moveto 266 448 lineto
    30 448 30 126 266 126 curveto
   532 126 lineto
   stroke
 } def
 
/RIGHTSHOE
 { 
   98 448 moveto 364 448 lineto
   600 448 600 126 364 126 curveto
    98 126 lineto
   stroke
 } def
 
/IBEAM
 { 
   325 20 moveto 325 500 lineto
   110 20 moveto 540 20 lineto
   stroke
   325 20 moveto 325 500 lineto
   110 500 moveto 540 500 lineto
   stroke
 } def
 
/RIGHTARROW
 { 
   40 350 moveto 630 350 lineto
   340 520 moveto 410 400 500 350 610 350 curveto
   340 180 moveto 410 300 500 350 610 350 curveto
   stroke
 } def
 
/NE
 { 
   125 400 moveto 400 0 rlineto
   125 200 moveto 400 0 rlineto
   175 80 moveto 475 520 lineto
   stroke
 } def
 
/ZILDE
 { 
   325 630 moveto
   75 630 75 20 325 20 curveto
   575 20 575 630 325 630 curveto
   stroke
    90 320 moveto
   150 550 550 150 570 410 curveto
   stroke
 } def
 
/PAW
 { 
   325 60 90 0 360 arc fill
   newpath 175 800 80 0 360 arc fill
   newpath 475 800 80 0 360 arc fill
 } def
 
/LOG
 { 
   325 300 220 0 360 arc stroke
   325 300 moveto 0 210 rlineto
   325 300 moveto -196 70 rlineto
   325 300 moveto 196 70 rlineto
   325 300 moveto -126 -168 rlineto
   325 300 moveto 126 -168 rlineto
   stroke
 } def
 
/IOTAUNDERBAR
 { 
   240 440 moveto 340 440 lineto 310 100 lineto
   300 10 380 10 420 60 curveto
   stroke
   50 -170 moveto 550 0 rlineto stroke
 } def
 
/DOWNARROW
 { 
   325 -10 moveto 0 620 rlineto
   325 10 moveto 325 140 225 250 150 280 curveto
   325 10 moveto 325 140 425 250 500 280 curveto
   stroke
 } def
 
/UPARROW
 { 
   325 30 moveto 0 620 rlineto
   325 620 moveto 325 460 225 380 150 350 curveto
   325 620 moveto 325 460 425 380 500 350 curveto
   stroke
 } def
 
/UPSTILE
 { 
   300 -70 moveto 0 770 rlineto 260 0 rlineto
   stroke
 } def
 
/DOWNSTILE
 { 
   560 -70 moveto -260 0 rlineto 0 770 rlineto
   stroke
 } def
 
/LEFTARROW
 { 
   658 350 moveto 70 350 lineto
   182 350 280 392 350 518 curveto
   70 350 moveto
   182 350 280 308 350 182 curveto
   stroke
 } def
 
/DELTA
 { 
   325 630 moveto 126 20 lineto 524 20 lineto
   closepath stroke
 } def
 
/MULTIPLY
 { 
   168 168 moveto 532 518 lineto
   168 518 moveto 532 168 lineto
   stroke
 } def
 
/DELTASTILE
 { 
   325 630 moveto 126 20 lineto 524 20 lineto
   closepath stroke
   325 -145 moveto 0 890 rlineto stroke
 } def
 
/QUAD
 { 
   80 -70 moveto 80 700 lineto 570 700 lineto 570 -70 lineto
   closepath stroke
 } def
 
/DELTILDE
 { 
   325 20 moveto 126 630 lineto 524 630 lineto
   closepath stroke
    90 320 moveto
   150 550 550 150 570 410 curveto
   stroke
 } def
 
/QUOTEQUAD
 { 
   80 -70 moveto 80 700 lineto 570 700 lineto 570 -70 lineto
   closepath stroke
   367 587 moveto
   325 630 60 -45 235 arc
   300 550 300 450 300 410 curveto
   300 250 350 250 350 410 curveto
   350 450 350 550 367 587 curveto
   fill
 } def
 
/DOMINO
 { 
   80 -70 moveto 80 700 lineto 570 700 lineto 570 -70 lineto
   closepath stroke
   125 315 moveto 400 0 rlineto stroke
   325 515 60 0 360 arc fill
   325 115 60 0 360 arc fill
 } def
 
/FIND
 { 
   490 460 moveto
   30 460 70 20 360 20 curveto
   490 20 lineto
   145 240 moveto 250 0 rlineto
   stroke
   50 -170 moveto 550 0 rlineto stroke
 } def
 
/DIERESIS
 { 
   newpath 175 800 80 0 360 arc fill
   newpath 475 800 80 0 360 arc fill
 } def
 
/CENT
 { 
   460 400 moveto
   40 700 40 -180 460 140 curveto
   325 80 moveto 0 -160 rlineto
   325 460 moveto 0 160 rlineto
   stroke
 } def
 
/STERLING
 { 
   520 600 moveto
   300 780 160 620 205 350 curveto
   240 220 240 140 230 100 curveto
   80 -150 -40 280 235 100 curveto
   380 10 490 0 540 50 curveto
   150 350 moveto 240 0 rlineto
   stroke
 } def
 
/DELSTILE
 { 
   325 20 moveto 126 630 lineto 524 630 lineto
   closepath stroke
   325 -145 moveto 0 890 rlineto stroke
 } def
 
/COMMABAR
 { 
   350 -20 moveto 200 -30 200 120 330 110 curveto
   450 100 440 -150 240 -150 curveto
   235 -100 lineto
   320 -100 350 -60 350 -20 curveto
   fill
   125 300 moveto 400 0 rlineto stroke
 } def
 
/FROWN
 { 
   newpath 175 800 80 0 360 arc fill
   newpath 475 800 80 0 360 arc fill
    90 320 moveto
   150 550 550 150 570 410 curveto
   stroke
 } def
 
/QUADUP
 { 
   80 -70 moveto 80 700 lineto 570 700 lineto 570 -70 lineto
   closepath stroke
   325 -70 moveto 325 700 lineto
   325 700 moveto 325 460 225 380 150 350 curveto
   325 700 moveto 325 460 425 380 500 350 curveto
   stroke
 } def
 
/QUADDOWN
 { 
   80 -70 moveto 80 700 lineto 570 700 lineto 570 -70 lineto
   closepath stroke
   325 -70 moveto 325 700 lineto
   325 -70 moveto 325 140 225 250 150 280 curveto
   325 -70 moveto 325 140 425 250 500 280 curveto
   stroke
 } def
 
/QUADLEFT
 { 
   80 -70 moveto 80 700 lineto 570 700 lineto 570 -70 lineto
   closepath stroke
   570 350 moveto 80 350 lineto
   170 350 280 392 350 518 curveto
   80 350 moveto
   170 350 280 308 350 182 curveto
   stroke
 } def
 
/QUADRIGHT
 { 
   80 -70 moveto 80 700 lineto 570 700 lineto 570 -70 lineto
   closepath stroke
   80 350 moveto 570 350 lineto
   340 520 moveto 410 400 500 350 570 350 curveto
   340 180 moveto 410 300 500 350 570 350 curveto
   stroke
 } def
 
/QUADSLOPE
 { 
   80 -70 moveto 80 700 lineto 570 700 lineto 570 -70 lineto
   closepath stroke
   160 700 moveto 490 -70 lineto stroke
 } def
 
/QUADJOT
 { 
   80 -70 moveto 80 700 lineto 570 700 lineto 570 -70 lineto
   closepath stroke
   325 300 126 0 360 arc
   stroke
 } def
 
/LAMP
 { 
   325 348 155 0 360 arc
   170 40 moveto 170 348 lineto
   480 40 moveto 480 348 lineto
   stroke
 } def
 
/SLOPEBAR
 { 
   150 700 moveto 500 -100 lineto stroke
   125 300 moveto 400 0 rlineto stroke
 } def
 
/DIAMOND
 { 
   125 300 moveto 325 550 lineto 525 300 lineto 325 50 lineto
   closepath stroke
 } def
 
/SQUAD
 { 
   490 -70 moveto 210 -70 lineto 210 700 lineto 490 700 lineto
   closepath stroke
 } def
 
/SNOUT
 { 
   325 20 moveto 325 500 lineto
   110 500 moveto 540 500 lineto
   stroke
   newpath 175 800 80 0 360 arc fill
   newpath 475 800 80 0 360 arc fill
 } def
 
/FROG
 { 
   325 20 moveto 126 630 lineto 524 630 lineto
   closepath stroke
   newpath 175 800 80 0 360 arc fill
   newpath 475 800 80 0 360 arc fill
 } def
 
/SOURPUSS
 { 
   325 300 moveto 0 210 rlineto
   325 300 moveto -196 70 rlineto
   325 300 moveto 196 70 rlineto
   325 300 moveto -126 -168 rlineto
   325 300 moveto 126 -168 rlineto
   stroke
   newpath 175 800 80 0 360 arc fill
   newpath 475 800 80 0 360 arc fill
 } def
 
/NOTMATCH
 { 
   125 450 moveto 400 0 rlineto
   125 300 moveto 400 0 rlineto
   125 150 moveto 400 0 rlineto stroke
   150 -100 moveto 500 700 lineto stroke
 } def
 
/GUILLEMOTLEFT
 { 
   570 450 moveto 310 300 lineto 570 150 lineto
   370 450 moveto 120 300 lineto 370 150 lineto
   stroke
 } def
 
/GUILLEMOTRIGHT
 { 
   270 450 moveto 530 300 lineto 270 150 lineto
    80 450 moveto 340 300 lineto 80 150 lineto
   stroke
 } def
 
/LD179
 { 0 setlinecap 0 setlinejoin
   325 -250 moveto 325 950 lineto stroke
 } def
 
/LD180
 { 0 setlinecap 0 setlinejoin
   325 -250 moveto 325 950 lineto % single line left junction
   0 300 moveto 325 0 rlineto stroke
 } def
 
/LD181
 { 0 setlinecap 0 setlinejoin
   0 350 moveto 325 350 lineto % single to double left t
   0 250 moveto 325 250 lineto
   325 950 moveto 325 -250 lineto
   stroke
 } def
 
/LD182
 { 0 setlinecap 0 setlinejoin
   275 950 moveto 275 -250 lineto % double left t to single -
   375 950 moveto 375 -250 lineto
   275 300 moveto 0 300 lineto
   stroke
 } def
 
/LD183
 { 0 setlinecap 0 setlinejoin
   275 -250 moveto 275 300 lineto % double top left to single
   375 -250 moveto 375 300 lineto 0 300 lineto
   stroke
 } def
 
/LD184
 { 0 setlinecap 0 setlinejoin
   325 250 moveto 0 250 lineto % single to double top right
   325 -250 moveto 325 350 lineto 0 350 lineto
   stroke
 } def
 
/LD185
 { 0 setlinecap 0 setlinejoin
   375 950 moveto 375 -250 lineto % double left t
   275 950 moveto 275 350 lineto 0 350 lineto
   0 250 moveto 275 250 lineto 275 -250 lineto
   stroke
 } def
 
/LD186
 { 0 setlinecap 0 setlinejoin
   275 -250 moveto 275 950 lineto % double vertical
   375 -250 moveto 375 950 lineto
   stroke
 } def
 
/LD187
 { 0 setlinecap 0 setlinejoin
   0 350 moveto 375 350 lineto 375 -250 lineto % double top right
   0 250 moveto 275 250 lineto 275 -250 lineto
   stroke
 } def
 
/LD188
 { 0 setlinecap 0 setlinejoin
   275 950 moveto 275 350 lineto 0 350 lineto % double lower right
   375 950 moveto 375 250 lineto 0 250 lineto
   stroke
 } def
 
/LD189
 { 0 setlinecap 0 setlinejoin
   275 950 moveto 275 300 lineto % double lower right to single
   375 950 moveto 375 300 lineto 0 300 lineto
   stroke
 } def
 
/LD190
 { 0 setlinecap 0 setlinejoin
   325 350 moveto 0 350 lineto % single to double lower right
   325 950 moveto 325 250 lineto 0 250 lineto
   stroke
 } def
 
/LD191
 { 0 setlinecap 0 setlinejoin
   325 -250 moveto 325 300 lineto % single line top right corner
   -325 0 rlineto stroke
 } def
 
/LD192
 { 0 setlinecap 0 setlinejoin
   325 950 moveto 325 300 lineto % single line lower right corner
   720 300 lineto stroke
 } def
 
/LD193
 { 0 setlinecap 0 setlinejoin
   325 300 moveto 325 950 lineto % single line t piece
   0 300 moveto 720 0 rlineto stroke
 } def
 
/LD194
 { 0 setlinecap 0 setlinejoin
   325 -250 moveto 325 300 lineto % single line t piece
   0 300 moveto 720 0 rlineto stroke
 } def
 
/LD195
 { 0 setlinecap 0 setlinejoin
   325 -250 moveto 325 950 lineto % single line right junction
   325 300 moveto 720 300 lineto stroke
 } def
 
/LD196
 { 0 setlinecap 0 setlinejoin
   0 300 moveto 720 0 rlineto stroke
 } def
 
/LD197
 { 0 setlinecap 0 setlinejoin
   325 -250 moveto 325 950 lineto % single line crossover
   0 300 moveto 720 0 rlineto stroke
 } def
 
/LD198
 { 0 setlinecap 0 setlinejoin
   720 350 moveto 325 350 lineto % single to double right t
   720 250 moveto 325 250 lineto
   325 950 moveto 325 -250 lineto
   stroke
 } def
 
/LD199
 { 0 setlinecap 0 setlinejoin
   275 950 moveto 275 -250 lineto % double right t to single -
   375 950 moveto 375 -250 lineto
   375 300 moveto 720 300 lineto
   stroke
 } def
 
/LD200
 { 0 setlinecap 0 setlinejoin
   275 950 moveto 275 250 lineto 720 250 lineto % double lower left
   375 950 moveto 375 350 lineto 720 350 lineto
   stroke
 } def
 
/LD201
 { 0 setlinecap 0 setlinejoin
   275 -250 moveto 275 350 lineto 720 350 lineto % double top left
   375 -250 moveto 375 250 lineto 720 250 lineto
   stroke
 } def
 
/LD202
 { 0 setlinecap 0 setlinejoin
   0 250 moveto 720 250 lineto % double lower t
   0 350 moveto 275 350 lineto 275 950 lineto
   375 950 moveto 375 350 lineto 720 350 lineto
   stroke
 } def
 
/LD203
 { 0 setlinecap 0 setlinejoin
   0 350 moveto 720 350 lineto % double top t
   0 250 moveto 275 250 lineto 275 -250 lineto
   375 -250 moveto 375 250 lineto 720 250 lineto
   stroke
 } def
 
/LD204
 { 0 setlinecap 0 setlinejoin
   275 950 moveto 275 -250 lineto % double right t
   375 950 moveto 375 350 lineto 720 350 lineto
   720 250 moveto 375 250 lineto 375 -250 lineto
   stroke
 } def
 
/LD205
 { 0 setlinecap 0 setlinejoin
   0 350 moveto 720 350 lineto % double =
   0 250 moveto 720 250 lineto
   stroke
 } def
 
/LD206
 { 0 setlinecap 0 setlinejoin
   0 250 moveto 275 250 lineto 275 -250 lineto % double line crossover
   0 350 moveto 275 350 lineto 275 950 lineto
   720 350 moveto 375 350 lineto 375 950 lineto
   720 250 moveto 375 250 lineto 375 -250 lineto
   stroke
 } def
 
/LD207
 { 0 setlinecap 0 setlinejoin
   0 350 moveto 720 350 lineto % single to double lower t
   0 250 moveto 720 250 lineto
   325 350 moveto 325 950 lineto
   stroke
 } def
 
/LD208
 { 0 setlinecap 0 setlinejoin
   275 950 moveto 275 300 lineto % double lower t to single
   375 950 moveto 375 300 lineto
   0 300 moveto 720 300 lineto
   stroke
 } def
 
/LD209
 { 0 setlinecap 0 setlinejoin
   0 350 moveto 720 350 lineto % single to double top t
   0 250 moveto 720 250 lineto
   325 250 moveto 325 -250 lineto
   stroke
 } def
 
/LD210
 { 0 setlinecap 0 setlinejoin
   375 -250 moveto 375 300 lineto % double top right t to single
   275 -250 moveto 275 300 lineto
   0 300 moveto 720 300 lineto
   stroke
 } def
 
/LD211
 { 0 setlinecap 0 setlinejoin
   275 950 moveto 275 300 lineto 720 300 lineto % dbl lower left to sgl
   375 950 moveto 375 300 lineto
   stroke
 } def
 
/LD212
 { 0 setlinecap 0 setlinejoin
   325 350 moveto 720 350 lineto % single to double lower left
   325 950 moveto 325 250 lineto 720 250 lineto
   stroke
 } def
 
/LD213
 { 0 setlinecap 0 setlinejoin
   325 250 moveto 720 250 lineto % single to double top left
   325 -250 moveto 325 350 lineto 720 350 lineto
   stroke
 } def
 
/LD214
 { 0 setlinecap 0 setlinejoin
   375 -250 moveto 375 300 lineto % double top right to single
   275 -250 moveto 275 300 lineto 720 300 lineto
   stroke
 } def
 
/LD215
 { 0 setlinecap 0 setlinejoin
   275 950 moveto 275 -250 lineto % double to single cross
   375 950 moveto 375 -250 lineto
   0 300 moveto 720 300 lineto
   stroke
 } def
 
/LD216
 { 0 setlinecap 0 setlinejoin
   0 350 moveto 720 350 lineto % single to double cross
   0 250 moveto 720 250 lineto
   325 950 moveto 325 -250 lineto
   stroke
 } def
 
/LD217
 { 0 setlinecap 0 setlinejoin
   325 950 moveto 325 300 lineto % single line lower right corner
   -325 0 rlineto stroke
 } def
 
/LD218
 { 0 setlinecap 0 setlinejoin
   325 -250 moveto 325 300 lineto % single line top left corner
   720 300 lineto stroke
 } def
 
/LD219
 { 
   0 -250 moveto % filled character
   720 -250 lineto 720 950 lineto 0 950 lineto
   closepath fill
 } def
 
/LD220
 { 
   0 -250 moveto % filled lower half
   720 -250 lineto 720 300 lineto 0 300 lineto
   closepath fill
 } def
 
/LD221
 { 
   0 -250 moveto % filled left half
   325 -250 lineto 325 950 lineto 0 950 lineto
   closepath fill
 } def
 
/LD222
 { 
   325 -250 moveto % right half solid
   720 -250 lineto 720 950 lineto 325 950 lineto
   closepath fill
 } def
 
/LD223
 { 
   0 300 moveto % filled top half
   720 300 lineto 720 950 lineto 0 950 lineto
   closepath fill
 } def
 
/ALPHA
 { 
   504 448 moveto
   508 280 420 20 280 20 curveto
   56 20 56 440 280 440 curveto
   450 442 490 -240 590 130 curveto
   stroke
 } def
 
/BETA
 { 
   126 -130 moveto 180 350 lineto
   190 540 510 600 480 380 curveto
   470 310 380 280 280 280 curveto
   540 280 580 -90 180 50 curveto
   stroke
 } def
 
/IOTA
 { 
   240 440 moveto 340 440 lineto 310 100 lineto
   300 10 380 10 420 60 curveto
   stroke
 } def
 
/HOOT
 { 
   325 300 126 0 360 arc
   stroke
   newpath 175 800 80 0 360 arc fill
   newpath 475 800 80 0 360 arc fill
 } def
 
/HOLLER
 { 
   325 300 220 0 360 arc stroke
   newpath 175 800 80 0 360 arc fill
   newpath 475 800 80 0 360 arc fill
 } def
 
/NOR
 { 
   100 520 moveto 325 130 lineto 550 520 lineto
   stroke
    90 320 moveto
   150 550 550 150 570 410 curveto
   stroke
 } def
 
/BASE
 { 
   325 20 moveto 325 500 lineto
   110 20 moveto 540 20 lineto
   stroke
 } def
 
/ENCODE
 { 
   325 20 moveto 325 500 lineto
   110 500 moveto 540 500 lineto
   stroke
 } def
 
/CIRCLESTILE
 { 
   325 300 220 0 360 arc stroke
   325 -145 moveto 0 890 rlineto stroke
 } def
 
/CIRCLEBAR
 { 
   325 300 220 0 360 arc stroke
   125 300 moveto 400 0 rlineto stroke
 } def
 
/NAND
 { 
   125 130 moveto 325 520 lineto 525 130 lineto
   stroke
    90 320 moveto
   150 550 550 150 570 410 curveto
   stroke
 } def
 
/SLASHBAR
 { 
   150 -100 moveto 500 700 lineto stroke
   125 300 moveto 400 0 rlineto stroke
 } def
 
/DEL
 { 
   325 20 moveto 126 630 lineto 524 630 lineto
   closepath stroke
 } def
 
/CIRCLESLOPE
 { 
   325 300 220 0 360 arc stroke
   150 700 moveto 500 -100 lineto stroke
 } def
 
/EPSILON
 { 
   490 460 moveto
   30 460 70 20 360 20 curveto
   490 20 lineto
   145 240 moveto 250 0 rlineto
   stroke
 } def
 
/UPSHOE
 { 
   160 40 moveto 160 372 lineto
   160 580 490 580 490 372 curveto
   490 40 lineto
   stroke
 } def
 
/MATCH
 { 
   125 450 moveto 400 0 rlineto
   125 300 moveto 400 0 rlineto
   125 150 moveto 400 0 rlineto stroke
 } def
 
/DELTAUNDERBAR
 { 
   325 630 moveto 126 20 lineto 524 20 lineto
   closepath stroke
   50 -170 moveto 550 0 rlineto stroke
 } def
 
/GE
 { 
   135 530 moveto 515 350 lineto 135 170 lineto
   135 50 moveto 515 50 lineto
   stroke
 } def
 
/LE
 { 
   515 530 moveto 135 350 lineto 515 170 lineto
   135 50 moveto 515 50 lineto
   stroke
 } def
 
/FORMAT
 { 
   325 20 moveto 325 500 lineto
   110 500 moveto 540 500 lineto
   stroke
   325 300 126 0 360 arc
   stroke
 } def
 
/EXECUTE
 { 
   325 20 moveto 325 500 lineto
   110 20 moveto 540 20 lineto
   stroke
   325 300 126 0 360 arc
   stroke
 } def
 
/DIVIDE
 { 
   125 315 moveto 400 0 rlineto stroke
   325 515 60 0 360 arc fill
   325 115 60 0 360 arc fill
 } def
 
/OMEGA
 { 
   200 450 moveto
   -100 0 220 -170 340 300 curveto
   220 -170 640 0 530 450 curveto
   stroke
 } def
 
/JOT
 { 
   325 300 126 0 360 arc
   stroke
 } def
 
/CIRCLE
 { 
   325 300 220 0 360 arc stroke
 } def
 
/OR
 { 
   100 520 moveto 325 130 lineto 550 520 lineto
   stroke
 } def
 
/RHO
 { 
   126 -130 moveto 126 260 lineto
   126 550 476 550 476 260 curveto
   476 -70 126 -70 126 260 curveto
   stroke
 } def
 
/DOWNSHOE
 { 
   160 518 moveto 160 226 lineto
   150 -30 490 -30 490 226 curveto
   490 518 lineto
   stroke
 } def
 
/HIGHBAR
 { 
   85 750 moveto 480 0 rlineto stroke
 } def
 
/STILE
 { 
   325 -145 moveto 0 890 rlineto stroke
 } def
 
end                      % ... of character defs
 
/BuildChar               % Stack: font char
  { 720 0                % char width
    0 -250 720 950       % bounding box
    setcachedevice
    1 setlinecap 1 setlinejoin
    48 setlinewidth
    newpath
    exch begin
      Encoding exch get                    
      CharProcs exch get                   
    end                                    
    exec                                   
  } def                                    
end                                  % of newfont
/APL-2741 newfont definefont pop     % Register it!

